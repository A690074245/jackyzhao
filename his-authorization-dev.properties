
#logback配置
logging.config=classpath:logback.xml
#web server
spring.application.name=his-authorization
server.contextPath=/api
server.port=30004
host.ip=authorization-svc.jacky-zhao.svc.cluster.local
host.url=http://${host.ip}
#数据库设置
datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://10.0.0.39:3306/his-manager?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
#spring.datasource.password=Y6B5cNewgQRf/9fVqqIqWkhMMT9vw1gknvZ3sYiBpp/9INBXQnAhF0QMTCuyffI2mPI18r9HXYEkbS0idtH0lw==
#spring.datasource.privateKey=MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAoT1gEyC4Wu0H9ArsCpuptybZpbjoT7zoGsUuploHyT5Gta985M1gv24DiamFLBz37DOhL430/TqWaqxNIHdOMwIDAQABAkAOCxZvFA56fOKQctMUKXKirROPx4cUStO8YSgq/PRopoyC/UZnM+Gmq9q2eUmXCmXNnYORnWhZ+j60k1UJ32vhAiEA0H2GlNkPSXwBCGNPnDkEO38ETEb2LE8tgnety1oJYN8CIQDF+3F/+Vdv81jTk/aFXo5iAnleopWK/qnXL7fub5SZLQIhAJwIBWtqUwWE12UGpfLdvOwl7/qB9QROMVn95URV2sTzAiEAm42n68jY7ljgnbxPoRJeBJu1CKntnTvh7fTMK0b4FjECIGECgqaX9+4QvxfmXN4IBnIDelG8AuNgF0mRKvFb+dWh
#spring.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKE9YBMguFrtB/QK7Aqbqbcm2aW46E+86BrFLqZaB8k+RrWvfOTNYL9uA4mphSwc9+wzoS+N9P06lmqsTSB3TjMCAwEAAQ==
#password:Y6B5cNewgQRf/9fVqqIqWkhMMT9vw1gknvZ3sYiBpp/9INBXQnAhF0QMTCuyffI2mPI18r9HXYEkbS0idtH0lw==
spring.datasource.password=J0v30/vMqa1b7cM7tyDpaOWRD2V7nCIY1cJvjRJClcSEWYO1XBDnvTa+6KtYrcANou5luAg64BQndnLzkFDorw==
spring.datasource.privateKey=MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAsz4vgdbS5rZw17NwZ2VeGs3uiITacYC2koWOfvUQd40GMoSCmNWIVuSjQ7OLagKQK3HCwvVjqEA0ekAirsHnIwIDAQABAkEApIXw31HLFd/iJetbwlxGC354czDWvRYy/ry+dgQFUGVFAKsND5f4YTJB2hBA1QUZuGMhZDsJQ3J1X8TB2EAm8QIhAN6feVvoiRMZABGw+k1sB/bLUTeeINckGfpZkIhuL6mLAiEAzh28V2rp/p0635y/4I/YvOMTJuDxJAHxpiPTeaqge8kCIDxZcuatZOtebZxeI5x1WrtWZo/zN+fai4hIW1wAsr79AiBkB+5mBo81cJ0n9OzyUR2A3jtnPPgK356lYPG7NGHacQIgXbfcnQWYR9OxSHQsHUU99Z77HWAw5wsvBXLZH9IEHNA=
spring.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALM+L4HW0ua2cNezcGdlXhrN7oiE2nGAtpKFjn71EHeNBjKEgpjViFbko0Ozi2oCkCtxwsL1Y6hANHpAIq7B5yMCAwEAAQ==
#--------------------------
#  lhspvisiiiaebifh
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=config.decrypt=true;config.decrypt.key=${spring.datasource.publicKey};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true


slave.datasource.driverClassName=com.mysql.jdbc.Driver
slave.datasource.url=jdbc:mysql://10.0.0.39:3306/his-manager?useUnicode=true&characterEncoding=utf-8
slave.datasource.username=root
#slave.datasource.password=Y6B5cNewgQRf/9fVqqIqWkhMMT9vw1gknvZ3sYiBpp/9INBXQnAhF0QMTCuyffI2mPI18r9HXYEkbS0idtH0lw==
#slave.datasource.privateKey=MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAoT1gEyC4Wu0H9ArsCpuptybZpbjoT7zoGsUuploHyT5Gta985M1gv24DiamFLBz37DOhL430/TqWaqxNIHdOMwIDAQABAkAOCxZvFA56fOKQctMUKXKirROPx4cUStO8YSgq/PRopoyC/UZnM+Gmq9q2eUmXCmXNnYORnWhZ+j60k1UJ32vhAiEA0H2GlNkPSXwBCGNPnDkEO38ETEb2LE8tgnety1oJYN8CIQDF+3F/+Vdv81jTk/aFXo5iAnleopWK/qnXL7fub5SZLQIhAJwIBWtqUwWE12UGpfLdvOwl7/qB9QROMVn95URV2sTzAiEAm42n68jY7ljgnbxPoRJeBJu1CKntnTvh7fTMK0b4FjECIGECgqaX9+4QvxfmXN4IBnIDelG8AuNgF0mRKvFb+dWh
#slave.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKE9YBMguFrtB/QK7Aqbqbcm2aW46E+86BrFLqZaB8k+RrWvfOTNYL9uA4mphSwc9+wzoS+N9P06lmqsTSB3TjMCAwEAAQ==
slave.datasource.password=J0v30/vMqa1b7cM7tyDpaOWRD2V7nCIY1cJvjRJClcSEWYO1XBDnvTa+6KtYrcANou5luAg64BQndnLzkFDorw==
slave.datasource.privateKey=MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAsz4vgdbS5rZw17NwZ2VeGs3uiITacYC2koWOfvUQd40GMoSCmNWIVuSjQ7OLagKQK3HCwvVjqEA0ekAirsHnIwIDAQABAkEApIXw31HLFd/iJetbwlxGC354czDWvRYy/ry+dgQFUGVFAKsND5f4YTJB2hBA1QUZuGMhZDsJQ3J1X8TB2EAm8QIhAN6feVvoiRMZABGw+k1sB/bLUTeeINckGfpZkIhuL6mLAiEAzh28V2rp/p0635y/4I/YvOMTJuDxJAHxpiPTeaqge8kCIDxZcuatZOtebZxeI5x1WrtWZo/zN+fai4hIW1wAsr79AiBkB+5mBo81cJ0n9OzyUR2A3jtnPPgK356lYPG7NGHacQIgXbfcnQWYR9OxSHQsHUU99Z77HWAw5wsvBXLZH9IEHNA=
slave.datasource.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALM+L4HW0ua2cNezcGdlXhrN7oiE2nGAtpKFjn71EHeNBjKEgpjViFbko0Ozi2oCkCtxwsL1Y6hANHpAIq7B5yMCAwEAAQ==

init-db=true
#--------------------------
#  lhspvisiiiaebifh
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
slave.datasource.initialSize=5
slave.datasource.minIdle=5
slave.datasource.maxActive=20
# 配置获取连接等待超时的时间
slave.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
slave.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
slave.datasource.minEvictableIdleTimeMillis=300000
slave.datasource.validationQuery=SELECT 1 FROM DUAL
slave.datasource.testWhileIdle=true
slave.datasource.testOnBorrow=false
slave.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
slave.datasource.poolPreparedStatements=true
slave.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
slave.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
slave.datasource.connectionProperties=config.decrypt=true;config.decrypt.key=${slave.datasource.publicKey};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
slave.datasource.useGlobalDataSourceStat=true





# JPA properties
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.database=mysql
spring.jpa.openInView=false
spring.jpa.show_sql=true
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none


#事务配置
txDbType=mysql
txManagerUrl=http://eureka-default-svc.jacky-zhao.svc.cluster.local:3137/tx/manager/getServer

#redis
spring.redis.database=0
spring.redis.host=redis-default-svc.jacky-zhao.svc.cluster.local
spring.redis.port=20944
spring.redis.password=Aa111111
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=1000
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.timeout=0

spring.aop.auto=true
spring.aop.proxy-target-class=true

eureka.client.serviceUrl.defaultZone=http://eureka-default-svc.jacky-zhao.svc.cluster.local:3137/eureka/



mybatis.mapper-locations= classpath:mapping/*.xml

mybatis.type-aliases-package=com.his.oauth.domain
mybatis.config.location=classpath:mybatis/*.xml
hystrix.command.default.execution.timeout.enabled: false

feign.httpclient.enabled=true
feign.hystirs.enable=true
#Application specific

security.oauth2.resource.filter-order= 3

oauth2.server-host=aggregator-default-svc.jacky-zhao.svc.cluster.local:8195/uaa/api

security.oauth2.resource.id=res_apptem
security.oauth2.resource.clientId=$2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
security.oauth2.resource.clientSecret=$2a$10$XOVs4Z1YtPKqKwQVywG9j.xLAqXYRQLGZMGMrZDNbtl6pUC0Weteq
security.oauth2.resource.tokenInfoUri=${oauth2.server-host}/oauth/check_token/
security.oauth2.resource.userInfoUri=${oauth2.server-host}/user
security.oauth2.resource.prefer-token-info=false


practice.oauth2.client.id=${security.oauth2.resource.id}
practice.oauth2.client.accessTokenUrl=${oauth2.server-host}/oauth/token
practice.oauth2.client.clientId=${security.oauth2.resource.clientId}
practice.oauth2.client.clientSecret=${security.oauth2.resource.clientSecret}
practice.oauth2.client.clientAuthenticationScheme=header

#Ribbon的负载均衡策略
ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
ribbon.MaxAutoRetriesNextServer=0

foundationService.ribbon.listOfServers=aggregator-default-svc.jacky-zhao.svc.cluster.local:8195/foundation
employeeService.ribbon.listOfServers=aggregator-default-svc.jacky-zhao.svc.cluster.local:8195/his-omp
flowService.ribbon.listOfServers=aggregator-default-svc.jacky-zhao.svc.cluster.local:8195/hflow


#fastdfs
connect_timeout = 2
network_timeout = 30
charset = ISO8859-1
http.tracker_http_port = 2164
http.anti_steal_token = no
http.secret_key = FastDFS1234567890
tracker_server =fastdfs-default-svc.jacky-zhao.svc.cluster.local:22339
storaged.server = fastdfs-default-svc.jacky-zhao.svc.cluster.local
storaged.group = group1
upload.url=http://${storaged.server}:${http.tracker_http_port}/${storaged.group}/

is_sass=false
sass_url=http://aggregator-default-svc.jacky-zhao.svc.cluster.local:8195/
haslicense=false
